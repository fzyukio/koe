version: '2.3'
services:
  db:
    container_name: ${CONTAINER_DATABASE_NAME}
    image: mysql:8.0
    ports:
      - $DB_PORT
    volumes:
      - "${MYSQL_VOLUME}:/var/lib/mysql"
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    restart: unless-stopped
  app:
    container_name: ${CONTAINER_APP_NAME}
    runtime: ${runtime}
    build:
      dockerfile: $DOCKER_FILE
      context: .
      network: host
    #    image: crazyfffan/koe
    networks:
      - default
      - web
    ports:
      - $EXPOSED_PORTS
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - VIRTUAL_PROTO=uwsgi
#     Uncomment below to DELETE and re-create the database from fixtures
      # - RESET_DB=true
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - ./user_data:/code/user_data
      - ./logs:/code/logs
      - ./backups:/code/backups
      - ./notebooks:/code/notebooks
      - ./settings:/code/settings

  cache:
    image: redis
    container_name: ${CONTAINER_CACHE_NAME}
    restart: unless-stopped
    ports:
      - $CACHE_PORT

  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:alpine
    ports:
      - "9080:80"
      - "8443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - web


networks:
  web:
    driver: bridge
