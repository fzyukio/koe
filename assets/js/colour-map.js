/*
 * Some colormap
 */
const colourMaps_ = {
  Green: [
    [255, 255, 255],
    [255, 255, 255],
    [255, 255, 255],
    [255, 255, 255],
    [255, 255, 255],
    [255, 255, 255],
    [255, 255, 255],
    [232, 246, 231],
    [232, 246, 231],
    [232, 246, 231],
    [232, 246, 231],
    [232, 246, 231],
    [232, 246, 231],
    [232, 246, 231],
    [209, 236, 206],
    [209, 236, 206],
    [209, 236, 206],
    [209, 236, 206],
    [209, 236, 206],
    [209, 236, 206],
    [209, 236, 206],
    [186, 227, 182],
    [186, 227, 182],
    [186, 227, 182],
    [186, 227, 182],
    [186, 227, 182],
    [186, 227, 182],
    [186, 227, 182],
    [149, 211, 148],
    [149, 211, 148],
    [149, 211, 148],
    [149, 211, 148],
    [149, 211, 148],
    [149, 211, 148],
    [149, 211, 148],
    [113, 196, 114],
    [113, 196, 114],
    [113, 196, 114],
    [113, 196, 114],
    [113, 196, 114],
    [113, 196, 114],
    [113, 196, 114],
    [43, 166, 85],
    [43, 166, 85],
    [43, 166, 85],
    [43, 166, 85],
    [43, 166, 85],
    [43, 166, 85],
    [43, 166, 85],
    [0, 110, 39],
    [0, 110, 39],
    [0, 110, 39],
    [0, 110, 39],
    [0, 110, 39],
    [0, 110, 39],
    [0, 110, 39],
    [0, 55, 20],
    [0, 55, 20],
    [0, 55, 20],
    [0, 55, 20],
    [0, 55, 20],
    [0, 55, 20],
    [0, 55, 20],
    [0, 55, 20],
  ],
  Jet: [
    [0, 0, 143],
    [0, 0, 159],
    [0, 0, 175],
    [0, 0, 191],
    [0, 0, 207],
    [0, 0, 223],
    [0, 0, 239],
    [0, 0, 255],
    [0, 159, 255],
    [0, 31, 255],
    [0, 47, 255],
    [0, 63, 255],
    [0, 79, 255],
    [0, 95, 255],
    [0, 111, 255],
    [0, 127, 255],
    [0, 143, 255],
    [0, 159, 255],
    [0, 175, 255],
    [0, 191, 255],
    [0, 207, 255],
    [0, 223, 255],
    [0, 239, 255],
    [0, 255, 255],
    [159, 255, 239],
    [31, 255, 223],
    [47, 255, 207],
    [63, 255, 191],
    [79, 255, 175],
    [95, 255, 159],
    [111, 255, 143],
    [127, 255, 127],
    [143, 255, 111],
    [159, 255, 95],
    [175, 255, 79],
    [191, 255, 63],
    [207, 255, 47],
    [223, 255, 31],
    [239, 255, 159],
    [255, 255, 0],
    [255, 239, 0],
    [255, 223, 0],
    [255, 207, 0],
    [255, 191, 0],
    [255, 175, 0],
    [255, 159, 0],
    [255, 143, 0],
    [255, 127, 0],
    [255, 111, 0],
    [255, 95, 0],
    [255, 79, 0],
    [255, 63, 0],
    [255, 47, 0],
    [255, 31, 0],
    [255, 159, 0],
    [255, 0, 0],
    [239, 0, 0],
    [223, 0, 0],
    [207, 0, 0],
    [191, 0, 0],
    [175, 0, 0],
    [159, 0, 0],
    [143, 0, 0],
    [127, 0, 0],
  ],
  Gray: [
    [255, 255, 255],
    [251, 251, 251],
    [247, 247, 247],
    [243, 243, 243],
    [239, 239, 239],
    [235, 235, 235],
    [231, 231, 231],
    [227, 227, 227],
    [223, 223, 223],
    [219, 219, 219],
    [215, 215, 215],
    [211, 211, 211],
    [207, 207, 207],
    [203, 203, 203],
    [199, 199, 199],
    [195, 195, 195],
    [190, 190, 190],
    [186, 186, 186],
    [182, 182, 182],
    [178, 178, 178],
    [174, 174, 174],
    [170, 170, 170],
    [166, 166, 166],
    [162, 162, 162],
    [158, 158, 158],
    [154, 154, 154],
    [150, 150, 150],
    [146, 146, 146],
    [142, 142, 142],
    [138, 138, 138],
    [134, 134, 134],
    [130, 130, 130],
    [125, 125, 125],
    [121, 121, 121],
    [117, 117, 117],
    [113, 113, 113],
    [109, 109, 109],
    [105, 105, 105],
    [101, 101, 101],
    [97, 97, 97],
    [93, 93, 93],
    [89, 89, 89],
    [85, 85, 85],
    [81, 81, 81],
    [77, 77, 77],
    [73, 73, 73],
    [69, 69, 69],
    [65, 65, 65],
    [60, 60, 60],
    [56, 56, 56],
    [52, 52, 52],
    [48, 48, 48],
    [44, 44, 44],
    [40, 40, 40],
    [36, 36, 36],
    [32, 32, 32],
    [28, 28, 28],
    [24, 24, 24],
    [20, 20, 20],
    [16, 16, 16],
    [12, 12, 12],
    [8, 8, 8],
    [4, 4, 4],
    [0, 0, 0],
  ],
};

/**
 * Convert a colour map array into 3 channels R,G,B for faster assignment
 * @param cm the colour map
 * @returns {{rPixelValues: Uint8ClampedArray, gPixelValues: Uint8ClampedArray, bPixelValues: Uint8ClampedArray}}
 */
const convertColourMap = function (cm) {
  let nLevels = cm.length;
  let rPixelValues = new Uint8ClampedArray(nLevels);
  let gPixelValues = new Uint8ClampedArray(nLevels);
  let bPixelValues = new Uint8ClampedArray(nLevels);
  let p;
  for (let i = 0; i < nLevels; i++) {
    p = cm[i];
    rPixelValues[i] = p[0];
    gPixelValues[i] = p[1];
    bPixelValues[i] = p[2];
  }
  return {
    rPixelValues,
    gPixelValues,
    bPixelValues,
  };
};

// export const defaultCm = convertColourMap(colourMap.custom);
export const colourMaps = {};

$.each(colourMaps_, function (name, arr) {
  colourMaps[name] = convertColourMap(arr);
});
