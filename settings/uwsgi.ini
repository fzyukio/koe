[tensorflow]
ini = :prod
protocol=http

[prod]
ini = :shared
socket=0.0.0.0:8000
# maximum number of worker processes
processes=10
stats=/tmp/stats.socket
enable-threads=true
# set up logging
logger-req=file:logfile=logs/access.log,maxsize=2000000
logger=file:logfile=logs/system.log,maxsize=2000000
logger=internalservererror file:logfile=logs/error.log,maxsize=2000000
log-route = internalservererror Internal Server Error
log-format = %(addr) [%(ltime)] "%(method) %(uri) %(proto)" %(status) %(size) %(msecs) "%(referer)" "%(uagent)"

[shared]
chdir=/code
module=koe.wsgi
env=DJANGO_SETTINGS_MODULE=koe.settings

## process-related settings
master=true
pidfile=/tmp/koe-master.pid
harakiri=120
max-requests=5000

# create dir for logs
# move this to /tmp when prod container updated to run without volume
if-not-dir = logs
 hook-asap = mkdir:logs
end-if =

# clear environment on exit
vacuum
# serve static files if path starts with /static
static-map=/static=/code/static
static-map=/user_data/=/code/user_data
touch-reload = /tmp/uwsgi-reload.me
# do not demonize yet so logs get written to stdout and accessible with 'docker logs'
#daemonize=/var/log/django/django-server.log
#uid = daemon
#gid = daemon

# This must be set for gRPC client to work (make connections to tf-dev)
lazy-apps=true
